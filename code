import random
import time
import copy
import os
os.system('cls')

win_pos = [[0,0],[0,1],[0,2]], [[1,0],[1,1],[1,2]], [[2,0],[2,1],[2,2]],\
[[0,0],[1,0],[2,0]], [[0,1],[1,1],[2,1]], [[0,2],[1,2],[2,2]],\
[[0,0],[1,1],[2,2]], [[0,2],[1,1],[2,0]]              
_map_pos = [[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]]
simbols = ['X','O']                                          
simbol_human = False
simbol_AI = False
level = False
steps = 0

def creat_map():
    _map = []
    for i in range(3):
        _map.append([' '] * 3)
    return _map

def show_map(_map):
    for i in _map:
        print(i)
        print()
    print('*'*20)

def human_move(_map):
    global steps
    steps += 1
    if steps > 9:
        return 'Draw'
    while True:
        
        human_move_y = int(input('Enter pos y (1 - 3): '))
        human_move_x = int(input('Enter pos x (1 - 3): '))
        if _map[human_move_y - 1][human_move_x - 1] == 'X' or _map[human_move_y - 1][human_move_x - 1] == 'O':
            print('Please, repeat your answer')
            continue
        _map[human_move_y - 1][human_move_x - 1] = simbol_human
        show_map(_map)
        for i in win_pos:
            if (_map[i[0][0]][i[0][1]] == simbol_human) and (_map[i[1][0]][i[1][1]] == simbol_human) and (_map[i[2][0]][i[2][1]] == simbol_human):
                return 'Finish_human'
        break

def AI_move(_map):
    global steps
    steps += 1
    if steps > 9:
        return 'Draw'
    while True:
        if level == 1:
            moves = first_level()
        elif level == 2:
            moves = second_level()
        else:
            moves = third_level()
        AI_move_y = moves[0]
        AI_move_x = moves[1]
        if _map[AI_move_y][AI_move_x] == 'X' or _map[AI_move_y][AI_move_x] == 'O':
            continue
        _map[AI_move_y][AI_move_x] = simbol_AI
        time.sleep(0.5)
        show_map(_map)
        
        for i in win_pos:
            if (_map[i[0][0]][i[0][1]] == simbol_AI) and (_map[i[1][0]][i[1][1]] == simbol_AI) and (_map[i[2][0]][i[2][1]] == simbol_AI):
                return 'Finish_AI'
        break

def AI_brain():
    _map_bot = copy.deepcopy(_map)
    for i in win_pos:
        quantity_simbol_human = 0
        quantity_simbol_AI = 0
        for j in range(3):
            if _map_bot[i[j][0]][i[j][1]] == simbol_human:
                quantity_simbol_human += 1
            elif _map_bot[i[j][0]][i[j][1]] == simbol_AI:
                quantity_simbol_AI += 1
        if (quantity_simbol_human == 1) and (quantity_simbol_AI == 0):
            for temp in range(3):
                if _map_bot[i[temp][0]][i[temp][1]] == ' ':
                    _map_bot[i[temp][0]][i[temp][1]] = 2
        elif (quantity_simbol_human == 0) and (quantity_simbol_AI == 1):
            for temp in range(3):
                if _map_bot[i[temp][0]][i[temp][1]] == ' ':
                    _map_bot[i[temp][0]][i[temp][1]] = 2
        elif (quantity_simbol_human == 2) and (quantity_simbol_AI == 0):
            for temp in range(3):
                if _map_bot[i[temp][0]][i[temp][1]] == ' ' or _map_bot[i[temp][0]][i[temp][1]] == 2:
                    _map_bot[i[temp][0]][i[temp][1]] = 3
        elif (quantity_simbol_human == 0) and (quantity_simbol_AI == 2):
            for temp in range(3):
                if _map_bot[i[temp][0]][i[temp][1]] == ' ' or _map_bot[i[temp][0]][i[temp][1]] == 2 or _map_bot[i[temp][0]][i[temp][1]] == 3:
                    _map_bot[i[temp][0]][i[temp][1]] = 4
    
    count_y = 0
    for i in _map_bot:
        count_x = 0
        for j in i:
            if j == ' ':
                _map_bot[count_y][count_x] = 1
            elif j == 'X' or j == 'O':
                _map_bot[count_y][count_x] = 0
            count_x += 1
        count_y += 1

    choice_lst = []
    for i in _map_pos:
        for temp in range(3):
            imp_pos = _map_bot[i[temp][0]][i[temp][1]]
            choice_lst.append([imp_pos,i[temp]])
    choice_lst.sort(reverse=True)

    max_num = choice_lst[0][0]
    pos_lst = []
    for i in choice_lst:
        if i[0] == max_num:
            pos_lst.append(i[1])

    return pos_lst
    
def first_level():
    AI_move_y = random.randint(0,2)
    AI_move_x = random.randint(0,2)
    return [AI_move_y,AI_move_x]

def second_level():
    pos_lst = AI_brain()

    random_bot_choice = random.randint(1,100)
    if random_bot_choice > 50:
        random_pos = random.choice(pos_lst)
        AI_move_y = random_pos[0]
        AI_move_x = random_pos[1]
    else:
        AI_move_y = random.randint(0,2)
        AI_move_x = random.randint(0,2)

    return [AI_move_y,AI_move_x]

def third_level():
    pos_lst = AI_brain()

    random_bot_choice = random.randint(1,100)
    if random_bot_choice > 10:
        random_pos = random.choice(pos_lst)
        AI_move_y = random_pos[0]
        AI_move_x = random_pos[1]
    else:
        AI_move_y = random.randint(0,2)
        AI_move_x = random.randint(0,2)

    return [AI_move_y,AI_move_x]

def choice():
    global simbol_human
    global simbol_AI
    global level
    while True:
        print('Choice - 1 if you want to play in the first level')
        print('Choice - 2 if you want to play in the second level')
        print('Choice - 3 if you want to play in the third level')
        level = int(input())
        if level == 1 or level == 2 or level == 3:
            break
        else:
            print('Repeat, please')
    while True:
        print('Choice - 1 if you want to be "X"')
        print('Choice - 2 if you want to be "O"')
        ans = int(input()) - 1
        if ans == 0:
            simbol_human = simbols[ans]
            simbols.pop(ans)
            simbol_AI = simbols[0]
            return 0
        elif ans == 1:
            simbol_human = simbols[ans]
            simbols.pop(ans)
            simbol_AI = simbols[0]
            return 1
        else:
            print('Repeat, please')
            continue

def start_game(_map):

    ender_human = False
    ender_AI = False
    ans = choice()
    show_map(_map)

    if ans == 0:
        while True:
            ender_human = human_move(_map)
            if ender_human == 'Finish_human':
                print('You win')
                break
            elif ender_human == 'Draw':
                print('Draw')
                break
            ender_AI = AI_move(_map)
            if ender_AI == 'Finish_AI':
               print('You lose')
               break
            elif ender_AI == 'Draw':
                print('Draw')
                break
    else:
        while True:
            ender_AI = AI_move(_map)
            if ender_AI == 'Finish_AI':
                print('You lose')
                break
            elif ender_human == 'Draw':
                print('Draw')
                break
            ender_human = human_move(_map)
            if ender_human == 'Finish_human':
                print('You win')
                break
            elif ender_AI == 'Draw':
                print('Draw')
                break
            print(steps)


_map = creat_map()
start_game(_map)
